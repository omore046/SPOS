Create the collection Books having the following fields TITLE, DESCRIPTION, BY, URL, TAGS AND LIKES. Implement the following Aggregation and Indexing Queries 
1. Find the number of books published by kanetkar. 
2. Find books which have minimum likes and maximum likes published by kanetkar. 
3. Find the average number of likes of the books published by kanetkar. 
4. Find the first and last book published by kanetkar. 
5. Create an index on author name. Display the books published by john and check if it uses the index which we have created 

/******************************************************************** 
*****************************************************/ FIND THE NUMBER OF BOOKS PUBLISHED BY kanetkar 
> 
db.BOOKS.aggregate([{$match:{by:"kanetkar"}},{$group:{_id:"$by",no_of_docum ents:{$sum:1}}}]) 
{ "_id" : "JOHN", "no_of_documents" : 2 } 
/******************************************************************** 
******************************************************/ 
FIND BOOKS WHICH HAVE MINIMUM LIKES AND MAXIMUM LIKES PUBLISHED BY JOHN 
> 
db.BOOKS.aggregate([{$match:{by:"kanetkar"}},{$group:{_id:"$by",minimum_lik es:{$min:"$likes"}}}]) 
{ "_id" : "JOHN", "minimum_likes" : 50 } 
> 
db.BOOKS.aggregate([{$match:{by:"kanetkar"}},{$group:{_id:"$by",minimum_lik es:{$max:"$likes"}}}]) 
{ "_id" : "JOHN", "minimum_likes" : 100 } 
/******************************************************************** 
******************************************************/ 
FIND THE AVERAGE NUMBER OF LIKES OF THE BOOKS PUBLISHED BY kanetkar 
> 
db.BOOKS.aggregate([{$match:{by:"kanetkar"}},{$group:{_id:"$by",avg_likes:{$a vg:"$likes"}}}]) 
{ "_id" : "JOHN", "avg_likes" : 75 } 
/******************************************************************** 
******************************************************/ FIND THE FIRST AND LAST BOOK PUBLISHED BY JOHN 
db.BOOKS.aggregate([{$match:{by:"kanetkar"}},{$group:{_id:"$by",first_book:{$f irst:"$title"}}}]) 
{ "_id" : "kanetkar", "first_book" : "C OVERVIEW" } 
> 
db.BOOKS.aggregate([{$match:{by:"kanetkar"}},{$group:{_id:"$by",last_book:{$l ast:"$title"}}}]) 
{ "_id" : "kanetkar", "last_book" : "Pointer in C" } 
/******************************************************************** 
******************************************************/ CREATE AN INDEX ON AUTHOR NAME 
> 
db.BOOKS.ensureIndex({"by":1}) 
{ 
"createdCollectionAutomatically" : false, "numIndexesBefore" : 1, "numIndexesAfter" : 2, 
"ok" : 1 
} 
> 
db.BOOKS.createIndex({"by":1}) 
{ 
"createdCollectionAutomatically" : false, "numIndexesBefore" : 1, 
"numIndexesAfter" : 2, 
"ok" : 1 
}
